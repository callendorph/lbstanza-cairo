defpackage cairo/Transformations :
  import core
  import cairo/Wrapper
  import cairo/Context
  import cairo/Matrix


public lostanza defn translate (self:ref<Context>, x:ref<Double>, y:ref<Double>) -> ref<False> :
  w_cairo_translate(self.value, x.value, y.value)
  return false

public lostanza defn rotate (self:ref<Context>, angle:ref<Double>) -> ref<False> :
  w_cairo_rotate(self.value, angle.value)
  return false

public lostanza defn transform (self:ref<Context>, m:ref<Matrix2D>) -> ref<False> :
  w_cairo_transform(self.value, addr!(m.xx))
  return false

public lostanza defn set-matrix (self:ref<Context>, m:ref<Matrix2D>) -> ref<False> :
  w_cairo_set_matrix(self.value, addr!(m.xx))
  return false

public lostanza defn get-matrix (self:ref<Context>) -> ref<Matrix2D> :
  val ret = Identity()
  w_cairo_get_matrix(self.value, addr!(ret.xx))
  return ret

public lostanza defn set-identity-matrix (self:ref<Context>) -> ref<False> :
  w_cairo_identity_matrix(self.value)
  return false

; @TOOD user to device and device to user with Point objects.