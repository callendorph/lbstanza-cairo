; This file was auto-generated by lbstanza-wrapper
; Version 0.1.1
; Manual editing would be unwise
defpackage cairo/Enums/cairo_content_t :
  import core

public deftype cairo_content_t <: Equalable
public deftype CAIRO_CONTENT_COLOR_t <: cairo_content_t
public deftype CAIRO_CONTENT_ALPHA_t <: cairo_content_t
public deftype CAIRO_CONTENT_COLOR_ALPHA_t <: cairo_content_t

public val CAIRO_CONTENT_COLOR = new CAIRO_CONTENT_COLOR_t
public val CAIRO_CONTENT_ALPHA = new CAIRO_CONTENT_ALPHA_t
public val CAIRO_CONTENT_COLOR_ALPHA = new CAIRO_CONTENT_COLOR_ALPHA_t

public defn to-int (v:cairo_content_t) -> Int:
  match(v) :
    (x:CAIRO_CONTENT_COLOR_t) : 4096
    (x:CAIRO_CONTENT_ALPHA_t) : 8192
    (x:CAIRO_CONTENT_COLOR_ALPHA_t) : 12288

public defn cairo_content_t (v:Int) -> cairo_content_t :
  switch {v == _}:
    4096 : CAIRO_CONTENT_COLOR
    8192 : CAIRO_CONTENT_ALPHA
    12288 : CAIRO_CONTENT_COLOR_ALPHA
    else: throw(Exception("cairo_content_t: Invalid Enum Value: %_" % [v]))

public lostanza defn cairo_content_t (v:int) -> ref<cairo_content_t> :
  return cairo_content_t(new Int{v})

public defmethod print (o:OutputStream, v:cairo_content_t) :
  match(v) :
    (x:CAIRO_CONTENT_COLOR_t) : print(o, "CAIRO_CONTENT_COLOR")
    (x:CAIRO_CONTENT_ALPHA_t) : print(o, "CAIRO_CONTENT_ALPHA")
    (x:CAIRO_CONTENT_COLOR_ALPHA_t) : print(o, "CAIRO_CONTENT_COLOR_ALPHA")

public defmethod equal? (a:cairo_content_t, b:cairo_content_t) -> True|False :
  to-int(a) == to-int(b)

